package com.example.breakpointcondition;

import com.intellij.codeInsight.completion.*;
import com.intellij.codeInsight.lookup.LookupElementBuilder;
import com.intellij.patterns.PlatformPatterns;
import com.intellij.psi.JavaCodeFragment;
import com.intellij.psi.PsiFile;
import com.intellij.util.ProcessingContext;
import org.jetbrains.annotations.NotNull;

import static com.intellij.patterns.PlatformPatterns.psiElement;
import static com.intellij.patterns.PlatformPatterns.psiFile;

/**
 * This CompletionContributor adds custom suggestions in the breakpoint condition editor.
 * It is triggered for any JavaCodeFragment (which the condition field uses).
 */
public class BreakpointConditionCompletionContributor extends CompletionContributor {
    public BreakpointConditionCompletionContributor() {
        extend(
            CompletionType.BASIC,
            psiElement().inFile(psiFile(JavaCodeFragment.class)),
            new CompletionProvider<CompletionParameters>() {
                @Override
                protected void addCompletions(@NotNull CompletionParameters parameters,
                                              @NotNull ProcessingContext context,
                                              @NotNull CompletionResultSet resultSet) {
                    PsiFile file = parameters.getOriginalFile();
                    if (!(file instanceof JavaCodeFragment)) {
                        return;
                    }
                    
                    // Provide your plugin suggestions
                    resultSet.addElement(LookupElementBuilder.create("myPluginSuggestion"));
                    resultSet.addElement(LookupElementBuilder.create("anotherSuggestion"));
                }
            }
        );
    }
}



    
 package com.example.breakpointcondition;

import com.intellij.openapi.actionSystem.AnAction;
import com.intellij.openapi.actionSystem.AnActionEvent;
import com.intellij.openapi.actionSystem.ActionManager;
import com.intellij.openapi.actionSystem.IdeActions;
import com.intellij.openapi.actionSystem.CommonDataKeys;
import com.intellij.openapi.editor.Editor;
import com.intellij.openapi.project.Project;
import com.intellij.psi.PsiDocumentManager;
import com.intellij.psi.PsiFile;
import com.intellij.psi.JavaCodeFragment;
import org.jetbrains.annotations.NotNull;

/**
 * An action that forces code completion to show the pluginâ€™s suggestions.
 * This action is intended for use in the breakpoint condition editor only.
 */
public class ShowPluginSuggestionsAction extends AnAction {

    @Override
    public void actionPerformed(@NotNull AnActionEvent e) {
        // Instead of calling a private method, trigger the built-in code completion action.
        ActionManager.getInstance()
                     .getAction(IdeActions.ACTION_CODE_COMPLETION)
                     .actionPerformed(e);
    }
    
    @Override
    public void update(@NotNull AnActionEvent e) {
        // Enable and show this action only if the current editor is a breakpoint condition editor
        Editor editor = e.getData(CommonDataKeys.EDITOR);
        boolean isBreakpointConditionEditor = false;
        if (editor != null && editor.getProject() != null) {
            PsiFile psiFile = PsiDocumentManager.getInstance(editor.getProject())
                                                .getPsiFile(editor.getDocument());
            if (psiFile instanceof JavaCodeFragment) {
                isBreakpointConditionEditor = true;
            }
        }
        e.getPresentation().setEnabledAndVisible(isBreakpointConditionEditor);
    }
}





<idea-plugin>
    <id>com.example.breakpointcondition</id>
    <name>Breakpoint Condition Completion Plugin</name>
    <version>1.0.0</version>
    <vendor email="you@example.com" url="http://example.com">Your Name</vendor>
    <description>
        This plugin adds custom code completion suggestions for breakpoint condition fields.
        Use the right-click menu or press the keyboard shortcut (Ctrl+Alt+P) to force the suggestions to appear.
    </description>

    <extensions defaultExtensionNs="com.intellij">
        <!-- Register the CompletionContributor for JavaCodeFragment editors -->
        <completion.contributor language="JAVA"
                                implementationClass="com.example.breakpointcondition.BreakpointConditionCompletionContributor"/>
    </extensions>

    <actions>
        <!-- Define the action that forces code completion -->
        <action
            id="com.example.breakpointcondition.ShowPluginSuggestionsAction"
            class="com.example.breakpointcondition.ShowPluginSuggestionsAction"
            text="Show Plugin Suggestions"
            description="Force code completion to show plugin suggestions in the condition editor">
        </action>

        <!-- Add the action to the standard editor popup menu -->
        <group id="EditorPopupMenu">
            <add-action action-id="com.example.breakpointcondition.ShowPluginSuggestionsAction" anchor="last"/>
        </group>
    </actions>

    <!-- Optionally, define a default keyboard shortcut -->
    <keyboard-shortcuts>
        <keyboard-shortcut
            actionId="com.example.breakpointcondition.ShowPluginSuggestionsAction"
            first-keystroke="ctrl alt P"/>
    </keyboard-shortcuts>
</idea-plugin>
