package com.example.plugin;

import com.intellij.openapi.project.Project;
import com.intellij.xdebugger.breakpoints.ui.XBreakpointCustomPropertiesPanel;
import com.intellij.xdebugger.breakpoints.XBreakpoint;
import com.intellij.xdebugger.breakpoints.XLineBreakpoint;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

import javax.swing.*;
import java.awt.*;
import java.util.Arrays;
import java.util.List;

public class CustomBreakpointPanel<B extends XBreakpoint<?>> extends XBreakpointCustomPropertiesPanel<B> {

    private JComboBox<String> conditionComboBox;

    // Static suggestions
    private static final List<String> SUGGESTIONS = Arrays.asList(
            "This is from Plugin",
            "x > 10",
            "y != null",
            "debugMode == true"
    );

    @Nullable
    @Override
    public JComponent createComponent() {
        // Create a JPanel
        JPanel panel = new JPanel(new BorderLayout());

        // Create JComboBox for suggestions
        conditionComboBox = new JComboBox<>();
        SUGGESTIONS.forEach(conditionComboBox::addItem);
        
        // Add ComboBox to panel
        panel.add(new JLabel("Suggested Conditions:"), BorderLayout.WEST);
        panel.add(conditionComboBox, BorderLayout.CENTER);

        return panel;
    }

    @Override
    public void saveTo(@NotNull B breakpoint) {
        if (breakpoint instanceof XLineBreakpoint) {
            ((XLineBreakpoint<?>) breakpoint).setCondition((String) conditionComboBox.getSelectedItem());
        }
    }

    @Override
    public void loadFrom(@NotNull B breakpoint) {
        if (breakpoint instanceof XLineBreakpoint) {
            conditionComboBox.setSelectedItem(((XLineBreakpoint<?>) breakpoint).getCondition());
        }
    }
}


<extensions defaultExtensionNs="com.intellij">
    <xbreakpointCustomPropertiesPanel 
        language="JAVA" 
        implementationClass="com.example.plugin.CustomBreakpointPanel"/>
</extensions>
